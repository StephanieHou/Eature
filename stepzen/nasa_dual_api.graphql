# TODO: Dual REST API data sources. This is not working yet.

interface Event {
  id: String!
  title: String!
  description: String
  date: String
  link: String
  coordinateType: String
  magnitudeValue: String
  magnitudeUnit: String
  sources: [EventSource]
  category: EventCategory
  coordinates: [CoordWrapper]
  count: String
}

type NASAEvent implements Event {
  id: String!
  title: String!
  description: String
  date: String
  link: String
  coordinateType: String
  magnitudeValue: String
  magnitudeUnit: String
  sources: [EventSource] @materializer(query: "sources")
  category: [EventCategory] @materializer(query: "NASACategories")
  coordinates: [CoordWrapper] @materializer(query: "NASACoordinates")
}

type PHQEvent implements Event {
  id: String!
  title: String!
  description: String
  date: String
  count: String
  # coordinates: [CoordWrapper] @materializer(query: "PHQCoordinates")
}

type CoordWrapper {
  lat: String
  lon: String
}

type Image {
  image: String
}

type EventCategory {
  id: String
  title: String
}

type EventSource {
  id: String
  url: String
}

type Query {
  events(limit: String!, start: String!, end: String!): [Event]
  event(id: String!): Event

  NASAEvents(limit: String!, start: String!, end: String!): [NASAEvent]
    @supplies(query: "events")
    @rest(
      endpoint: "https://eonet.sci.gsfc.nasa.gov/api/v3/events?limit=$limit&start=$start&end=$end&api_key=$api_key"
      configuration: "nasa_config"
      resultroot: "events[]"
      setters: [
        { field: "date", path: "geometry[].date" }
        # { field: "category", path: "categories[].title" }
      ]
    )

  PHQEvents(limit: String!, start: String!, end: String!): [PHQEvent]
    @supplies(query: "events")
    @rest(
      endpoint: "https://api.PHQ.com/v1/events?category=disasters&limit=$limit&start.gte=$start&end.lte=$end"
      configuration: "predicthq_config"
      resultroot: "results[]"
      setters: [
        { field: "date", path: "start" }
        # { field: "coordinates", path: "location[]" }
      ]
    )

  NASAEvent(id: String!): NASAEvent
    @supplies(query: "event")
    @rest(
      endpoint: "https://eonet.sci.gsfc.nasa.gov/api/v3/events/$id?limit=1&api_key=$api_key"
      configuration: "nasa_config"
      setters: [
        { field: "date", path: "geometry[].date" }
        # { field: "category", path: "categories[].title" }
        { field: "coordinateType", path: "geometry[].type" }
        { field: "magnitudeUnit", path: "geometry[].magnitudeUnit" }
        { field: "magnitudeValue", path: "geometry[].magnitudeValue" }
      ]
    )

  PHQEvent(id: String!): PHQEvent
    @supplies(query: "event")
    @rest(
      endpoint: "https://api.PHQ.com/v1/events?id=$id"
      configuration: "predicthq_config"
      resultroot: "results[]"
      setters: [{ field: "date", path: "start" }]
    )

  sources(id: String!): [EventSource]
    @rest(
      endpoint: "https://eonet.sci.gsfc.nasa.gov/api/v3/events/$id?limit=1&api_key=$api_key"
      configuration: "nasa_config"
      resultroot: "sources[]"
    )

  NASACategories(id: String!): [EventCategory]
    @rest(
      endpoint: "https://eonet.sci.gsfc.nasa.gov/api/v3/events/$id?limit=1&api_key=$api_key"
      configuration: "nasa_config"
      # resultroot: "categories[]"
      # setters: [{ field: "category", path: "categories[].title" }]
    )

  NASACoordinates(id: String!): [CoordWrapper]
    @rest(
      endpoint: "https://us-central1-stepzen-web-staging.cloudfunctions.net/keyArraytoValueArray/?root=root.geometry[0].coordinates&fields=lon,lat&url=https://eonet.sci.gsfc.nasa.gov/api/v3/events/$id?limit=1&api_key=$api_key"
      configuration: "nasa_config"
    )

  PHQCoordinates(id: String!): [CoordWrapper]
    @rest(
      endpoint: "https://us-central1-stepzen-web-staging.cloudfunctions.net/keyArraytoValueArray/?root=location&fields=lon,lat&url=https://eonet.sci.gsfc.nasa.gov/api/v3/events/$id?limit=1&api_key=$api_key"
      configuration: "predicthq_config"
    )
}

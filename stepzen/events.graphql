#
# Interfaces
#
interface Event {
  id: String!
  title: String!
  description: String
  date: String
  link: String
  coordinateType: String
  magnitudeValue: String
  magnitudeUnit: String
  sources: [EventSource] @materializer(query: "sources")
  categories: [EventCategory] @materializer(query: "categories")
  coordinates: CoordWrapper @materializer(query: "coordinates")
}

interface CoordWrapper {
  lat: String
  lon: String
}

interface EventCategory {
  id: String
  title: String
}

interface EventSource {
  id: String
  url: String
}

#
# NASA Types
#
type EventNASA implements Event {}
type CoordWrapperNASA implements CoordWrapper {}
type EventCategoryNASA implements EventCategory {}
type EventSourceNASA implements EventSource {}

#
# PredictHQ Types
#
type EventPHQ implements Event {
  # category: String
  # String # TODO: I want to take  to fit into "categories" of Event interface.
}
type CoordWrapperPHQ implements CoordWrapper {}
type EventCategoryPHQ implements EventCategory {}
type EventSourcePHQ implements EventSource {}

#
# Queries
#
type Query {
  #
  # Unified Events GraphQL API
  #
  events(limit: String!, start: String!, end: String!): [Event]
  event(id: String!): Event

  coordinates(id: String!): CoordWrapper
  sources(id: String!): [EventSource]
  categories(id: String!): [EventCategory]

  #
  # NASA REST API @supplies
  # https://eonet.sci.gsfc.nasa.gov/docs/v3
  #
  eventsNASA(limit: String!, start: String!, end: String!): [EventNASA]
    @supplies(query: "events")
    @rest(
      endpoint: "https://eonet.sci.gsfc.nasa.gov/api/v3/events?api_key=$api_key&limit=$limit&start=$start&end=$end"
      configuration: "nasa_config"
      resultroot: "events[]"
      setters: [{ field: "date", path: "geometry[].date" }]
    )

  eventNASA(id: String!): EventNASA
    @supplies(query: "event")
    @rest(
      endpoint: "https://eonet.sci.gsfc.nasa.gov/api/v3/events/$id?limit=1&api_key=$api_key"
      configuration: "nasa_config"
      setters: [
        { field: "date", path: "geometry[].date" }
        { field: "coordinateType", path: "geometry[].type" }
        { field: "magnitudeUnit", path: "geometry[].magnitudeUnit" }
        { field: "magnitudeValue", path: "geometry[].magnitudeValue" }
      ]
    )

  sourcesNASA(id: String!): [EventSourceNASA]
    @supplies(query: "sources")
    @rest(
      endpoint: "https://eonet.sci.gsfc.nasa.gov/api/v3/events/$id?limit=1&api_key=$api_key"
      configuration: "nasa_config"
      resultroot: "sources[]"
    )

  categoriesNASA(id: String!): [EventCategoryNASA]
    @supplies (query: "categories")
    @rest(
      endpoint: "https://eonet.sci.gsfc.nasa.gov/api/v3/events/$id?limit=1&api_key=$api_key"
      configuration: "nasa_config"
      resultroot: "categories[]"
    )

  coordinatesNASA(id: String!): CoordWrapperNASA
    @supplies (query: "coordinates")
    @rest(
      endpoint: "https://us-central1-stepzen-web-staging.cloudfunctions.net/keyArraytoValueArray/?root=root.geometry[0].coordinates&fields=lon,lat&url=https://eonet.sci.gsfc.nasa.gov/api/v3/events/$id?limit=1&api_key=$api_key"
      configuration: "nasa_config"
    )

  #
  # PredictHQ Events REST API @supplies
  # https://docs.predicthq.com/api/requests/
  #
  eventsPHQ(limit: String!, start: String!, end: String!): [EventPHQ]
    @supplies(query: "events")
    @rest(
      endpoint: "https://api.predicthq.com/v1/events?category=disasters&limit=$limit&start.gte=$start&end.lte=$end"
      configuration: "predicthq_config"
      resultroot: "results[]"
      setters: [
        { field: "date", path: "start" }
      ]
    )

  eventPHQ(id: String!): EventPHQ
    @supplies(query: "event")
    @rest(
      endpoint: "https://api.predicthq.com/v1/events?id=$id"
      configuration: "predicthq_config"
      resultroot: "results[]"
      setters: [{ field: "date", path: "start" }]
    )

  coordinatesPHQ(id: String!): CoordWrapperPHQ
    @supplies(query: "coordinates")
    @rest(
      endpoint: "https://us-central1-stepzen-web-staging.cloudfunctions.net/keyArraytoValueArray/?root=root.results[0].location&fields=lon,lat&url=https://api.predicthq.com/v1/events?id=$id"
      configuration: "predicthq_config"
    )
}
